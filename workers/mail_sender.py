import asyncio

from aiogram.exceptions import TelegramForbiddenError
from telethon.errors import UserDeactivatedError

from bot import release_bot
from commands import exit_keyboard
from settings import db

text = """üá∑üá∫ <a href="https://telegra.ph/file/0360a226ff83aefa35988.png">–î—Ä—É–∑—å—è</a>, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –í–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é —É—Å–ª—É–≥—É –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ö–ª—É–±–∞ –ò–≥—Ä–æ–∫–æ–≤ Castle Clash. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–±—ã—Ç–∏–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º <a href="https://discord.gg/mb6YyZpY6r">Discord –∫–∞–Ω–∞–ª–µ Castle Clash</a> –≤ –≤–∫–ª–∞–¥–∫–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è".
–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –í–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—ã –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –±–æ—Ç–∞ @letsplaycastleclash_creative_bot.
–°–æ–±—ã—Ç–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∏–≥—Ä—ã, –Ω–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è. 
–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è, —É –Ω–∏—Ö –±—ã–≤–∞—é—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ —Å–∫–∏–¥–∫–∏.

üá¨üáß Friends, we present to your attention a service from the partners of the Castle Clash Players Club. All information about the event can be found in the official Castle Clash Discord channel (https://discord.gg/mb6YyZpY6r) in the "Notifications" tab.
If you are interested in rewards or have questions, please contact @letsplaycastleclash_creative_bot.
The event takes place outside the game, the reward is awarded by the developers and takes time.
Don't forget to subscribe, they have interesting events and even discounts."""

notification_label = 'reklama_creative_may_2023'


async def main():
    while True:
        user = await db.users.find_one({notification_label: {'$ne': True}})
        print(user)
        if not user:
            break
        try:
            await release_bot.send_message(
                chat_id=user['chat_id'],
                text=text,
                reply_markup=exit_keyboard
            )

            await db.users.update_one({'_id': user['_id']}, {'$set': {notification_label: True}})

        except UserDeactivatedError:
            await db.users.update_one({'_id': user['_id']},
                                      {'$set': {'status': 'deactivated', notification_label: True}})

        except TelegramForbiddenError:
            await db.users.update_one({'_id': user['_id']},
                                      {'$set': {'status': 'bot_blocked', notification_label: True}})

        except Exception as e:
            raise e


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())